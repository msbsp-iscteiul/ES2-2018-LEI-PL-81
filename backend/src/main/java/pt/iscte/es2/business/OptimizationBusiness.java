package pt.iscte.es2.business;

import org.springframework.core.io.FileSystemResource;
import org.springframework.web.multipart.MultipartFile;
import pt.iscte.es2.dto.*;
import pt.iscte.es2.dto.service.optimization.*;

import java.util.List;

public interface OptimizationBusiness {

	/**
	 * Persists an {@link OptimizationConfiguration} suggested by the user.
	 *
	 * @param problemName
	 * 			String
	 * @param description
	 * 			String
	 * @param email
	 * 			String
	 * @param sessionId
	 * 			String
	 * @param variables
	 * 			List
	 * @param objectives
	 * 			List
	 * @param algorithms
	 * 			List
	 * @param restrictions
	 * 			List
	 * @param algorithmChoiceMethod
	 * 			{@link AlgorithmChoiceMethod}
	 * @param executionMaxWaitTime
	 * 			Integer
	 * @param file
	 * 			MultipartFile
	 *
	 * 	@return {@link SaveOptimizationConfigurationResult}
	 */
	public SaveOptimizationConfigurationResult saveOptimization(
		String problemName,
		String description,
		String email,
		String sessionId,
		List<OptimizationConfigurationVariables> variables,
		List<OptimizationConfigurationObjectives> objectives,
		List<OptimizationConfigurationAlgorithms> algorithms,
		List<OptimizationConfigurationRestrictions> restrictions,
		AlgorithmChoiceMethod algorithmChoiceMethod,
		Integer executionMaxWaitTime,
		MultipartFile file);

	/**
	 * Uploads a Jar file that contains a problem to be solved, returning all necessary
	 * data such as NumberOfVariables, NumberOfObjectives.
	 *
	 * @param sessionId
	 * 			String
	 * @param file
	 * 			MultipartFile
	 *
	 * @return {@link FileUploadResult}
	 */
	public FileUploadResult fileUpload(String sessionId, MultipartFile file);

	/**
	 * Searchs for an {@link OptimizationConfiguration} by id and user email.
	 *
	 * @param id
	 * 			Integer
	 *
	 * @param email
	 * 			String
	 *
	 * @return {@link OptimizationConfigurationResult}
	 */
	public OptimizationConfigurationResult searchOptimizationConfigurationByIdAndEmail(Integer id, String email);

	/**
	 * Searchs for all {@link SummaryOptimizationConfiguration} by email.
	 *
	 * @param email
	 * 			String
	 *
	 * @return {@link SummaryOptimizationConfigurationResult}
	 */
	public SummaryOptimizationConfigurationResult searchOptimizationConfigurationByEmail(String email);

	/**
	 * Executes an {@link OptimizationConfiguration} by id and user email.
	 *
	 * @param id
	 * 			Integer
	 *
	 * @param email
	 * 			String
	 *
	 * @return {@link ExecuteOptimizationConfigurationResult}
	 */
	public ExecuteOptimizationConfigurationResult executeOptimizationConfiguration(Integer id, String email);

	/**
	 * Persists a list of {@link OptimizationJobSolutions} given an {@link OptimizationJobExecutions} id.
	 *
	 * @param id - ID of the {@link OptimizationJobExecutions}
	 * 			Integer
	 *
	 * @param state - Represents the state of an {@link OptimizationJobExecutions}
	 * 			{@link State}
	 *
	 * @param solutions - Solutions generated by JMetal
	 * 			List
	 *
	 * @param latex - Latex File generated by JMetal
	 * 			MultipartFile
	 *
	 * @param r - R File generated by JMetal
	 * 			MultipartFile
	 *
	 * @return {@link SaveOptimizationJobSolutionResult}
	 */
	public SaveOptimizationJobSolutionResult saveOptimizationJobSolution(
		Integer id, State state, List<OptimizationJobSolutions> solutions, MultipartFile latex, MultipartFile r);

	/**
	 * Updates the State of an {@link OptimizationJobExecutions} by id.
	 *
	 * @param id
	 * 			Integer
	 *
	 * @param state
	 * 			{@link State}
	 */
	public void updateState(Integer id, State state);

	/**
	 * Returns the Problem (jar file) associated with an {@link OptimizationJobExecutions} by id.
	 *
	 * @param id
	 * 			Integer
	 *
	 * @return FileSystemResource
	 */
	public FileSystemResource searchAttachmentByJobExecution(Integer id);

	/**
	 * Searchs for all {@link OptimizationJobExecutions} available by user email.
	 *
	 * @param email
	 * 			String
	 *
	 * @return {@link OptimizationJobExecutionsResult}
	 */
	public OptimizationJobExecutionsResult searchOptimizationJobExecutionsByEmail(String email);

	/**
	 * Returns the Latex file associated with {@link OptimizationJobExecutions} by id
	 *
	 * @param id
	 * 			Integer
	 *
	 * @return FileSystemResource
	 */
	public FileSystemResource searchLatexByExecutionId(Integer id);

	/**
	 * Returns the R file associated with the {@link OptimizationJobExecutions} by id.
	 *
	 * @param id
	 * 			Integer
	 *
	 * @return FileSystemResource
	 */
	public FileSystemResource searchRByExecutionId(Integer id);

}
